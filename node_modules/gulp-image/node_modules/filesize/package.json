{
  "name": "filesize",
  "description": "JavaScript library to generate a human readable String describing the file size",
  "version": "3.1.2",
  "homepage": "http://filesizejs.com",
  "author": {
    "name": "Jason Mulligan",
    "email": "jason.mulligan@avoidwork.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/avoidwork/filesize.js.git"
  },
  "bugs": {
    "url": "https://github.com/avoidwork/filesize.js/issues"
  },
  "licenses": [
    {
      "type": "BSD-3",
      "url": "https://raw.github.com/avoidwork/filesize.js/master/LICENSE"
    }
  ],
  "main": "lib/filesize",
  "engines": {
    "node": ">= 0.4.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.4.5",
    "grunt-cli": "~0.1.13",
    "grunt-babel": "^4.0.0",
    "grunt-sed": "~0.1.1",
    "grunt-contrib-concat": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.4.1",
    "grunt-contrib-watch": "~0.6.1",
    "grunt-contrib-uglify": "~0.7.0"
  },
  "keywords": [
    "file",
    "filesize",
    "size",
    "readable",
    "file system"
  ],
  "readme": "# filesize.js\n\n[![build status](https://secure.travis-ci.org/avoidwork/filesize.js.png)](http://travis-ci.org/avoidwork/filesize.js) [![Join the chat at https://gitter.im/avoidwork/filesize.js](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/avoidwork/filesize.js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nfilesize.js provides a simple way to get a human readable file size string from a number (float or integer) or string.\n\n## Optional settings\n\n`filesize()` accepts an optional descriptor Object as a second argument, so you can customize the output.\n\n### base\n_***(number)***_ Number base, default is `2`\n\n### bits\n_***(boolean)***_ Enables `bit` sizes, default is `false`\n\n### exponent\n_***(number)***_ Specifies the SI suffix via exponent, e.g. `2` is `MB` for bytes, default is `-1`\n\n### output\n_***(string)***_ Output of function (`array`, `exponent`, `object`, or `string`), default is `string`\n\n### round\n_***(number)***_ Decimal place, default is `2`\n\n### spacer\n_***(string)***_ Character between the `result` and `suffix`, default is `\" \"`\n\n### suffixes\n_***(object)***_ Dictionary of SI suffixes to replace for localization, defaults to english if no match is found\n\n### unix\n_***(boolean)***_ Enables unix style human readable output, e.g `ls -lh`, default is `false`\n\n## Examples\n\n```javascript\nfilesize(500);                        // \"500 B\"\nfilesize(500, {bits: true});          // \"4 kb\"\nfilesize(265318, {base: 10});         // \"265.32 kB\"\nfilesize(265318);                     // \"259.1 kB\"\nfilesize(265318, {round: 0});         // \"259 kB\"\nfilesize(265318, {output: \"array\"});  // [259.1, \"kB\"]\nfilesize(265318, {output: \"object\"}); // {value: 259.1, suffix: \"kB\"}\nfilesize(1, {suffixes: {B: \"Б\"}});    // \"1 Б\"\nfilesize(1024);                       // \"1 kB\"\nfilesize(1024, {exponent: 0});        // \"1024 B\"\nfilesize(1024, {output: \"exponent\"}); // 1\n```\n\n## How can I load filesize.js?\nfilesize.js supports AMD loaders (require.js, curl.js, etc.), node.js & npm (npm install filesize), or using a script tag.\n\n## License\nCopyright (c) 2015 Jason Mulligan\nLicensed under the BSD-3 license.\n",
  "readmeFilename": "README.md",
  "_id": "filesize@3.1.2",
  "dist": {
    "shasum": "8c1d047576086370999b23c32f217c4d51abf28a"
  },
  "_from": "filesize@^3.1.1",
  "_resolved": "https://registry.npmjs.org/filesize/-/filesize-3.1.2.tgz"
}
